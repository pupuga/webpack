@import "units";

@mixin circles($size: 12px, $stroke-width: 2px, $full-line-color: gray, $progress-line-color: orange, $stroke-linecap: butt) {
  $center-point: ($size/2);
  $radius: (($size - $stroke-width)/2);
  $circle-width: round-unit(2 * $radius * 3.14159265358979, 0);
  $circle-width-value: strip-unit($circle-width);
  $time: 1s;
  width: $size;
  height: $size;
  position: relative;
  z-index: 1;
  & > div {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    position: absolute;
    z-index: 1;
    left: 0;
    top: 0;
  }
  svg {
    width: inherit;
    height: inherit;
  }
  circle:nth-child(1) {
    cx: $center-point;
    cy: $center-point;
    r: $radius;
    fill: none;
    stroke-linecap: $stroke-linecap;
    stroke-width: $stroke-width;
    stroke: $full-line-color;
  }
  circle:nth-child(2) {
    cx: $center-point;
    cy: $center-point;
    r: $radius;
    fill: none;
    stroke-linecap: $stroke-linecap;
    stroke-width: $stroke-width;
    stroke: $progress-line-color;
    animation: circle-fill $time linear reverse;
    transform: rotate(-90deg);
    transform-origin: center;
    @keyframes circle-fill {
      to {stroke-dasharray: 0 $circle-width;}
    }
  }
}

@mixin circles-gradient($stroke-width: 16px, $stroke-linecap: round, $time: 0.75s) {

  $pi: 3.14159265358979;
  $radius: 100px;
  $width: $pi * $radius;

  svg {
    width: 100%;
    height: 100%;
  }

  g {
    stroke-width: $stroke-width;
    transform: translate(100px,100px);
    fill: none;
  }

  .arc-circle-background {
    path {
      stroke-dashoffset: 0;
    }
  }

  .arc-circle-progress {
    path {
      animation: dash $time linear forwards;
    }
  }

  path {
    stroke-dasharray: $width;
    stroke-dashoffset: $width;
    fill: none;
    stroke-linecap: round;
  }

  path:nth-child(1){
    animation-delay: 0s;
  }

  path:nth-child(2){
    animation-delay: $time;
    transform: scale(-1, -1);
  }

  @keyframes dash {
    from {
      stroke-dashoffset: $width;
    }
    to {
      stroke-dashoffset: 0;
    }
  }
}